<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-07T14:25:37 IST" name="Suite" finished-at="2025-02-07T14:25:47 IST" duration-ms="10195">
    <groups>
    </groups>
    <test started-at="2025-02-07T14:25:37 IST" name="Test" finished-at="2025-02-07T14:25:47 IST" duration-ms="10195">
      <class name="com.bank.api.tests.AuthenticationTests">
        <test-method is-config="true" signature="extentReportSetup()[pri:0, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:36 IST" name="extentReportSetup" finished-at="2025-02-07T14:25:37 IST" duration-ms="524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportSetup -->
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:37 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:37 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=AuthenticationTests.testSignUp_alreadyExistUser()[pri:2, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="testSignUp_alreadyExistUser()[pri:2, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:37 IST" name="testSignUp_alreadyExistUser" finished-at="2025-02-07T14:25:40 IST" duration-ms="2965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignUp_alreadyExistUser -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:40 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:40 IST" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSignUp_alreadyExistUser status=SUCCESS method=AuthenticationTests.testSignUp_alreadyExistUser()[pri:2, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:40 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=AuthenticationTests.testLogin_invalidCredentials()[pri:3, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="testLogin_invalidCredentials()[pri:3, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:40 IST" name="testLogin_invalidCredentials" finished-at="2025-02-07T14:25:41 IST" duration-ms="1473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin_invalidCredentials -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:41 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin_invalidCredentials status=SUCCESS method=AuthenticationTests.testLogin_invalidCredentials()[pri:3, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:41 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:41 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=AuthenticationTests.testLogin_validCredentials()[pri:4, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="testLogin_validCredentials()[pri:4, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:41 IST" name="testLogin_validCredentials" finished-at="2025-02-07T14:25:42 IST" duration-ms="394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin_validCredentials -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:42 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:42 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin_validCredentials status=SUCCESS method=AuthenticationTests.testLogin_validCredentials()[pri:4, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:42 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=AuthenticationTests.testForgotPassword_validEmail()[pri:5, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="testForgotPassword_validEmail()[pri:5, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:42 IST" name="testForgotPassword_validEmail" finished-at="2025-02-07T14:25:43 IST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForgotPassword_validEmail -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:43 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testForgotPassword_validEmail status=SUCCESS method=AuthenticationTests.testForgotPassword_validEmail()[pri:5, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.bank.api.tests.AuthenticationTests@13e9f2e2]" started-at="2025-02-07T14:25:47 IST" name="tearDown" finished-at="2025-02-07T14:25:48 IST" duration-ms="1261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.bank.api.tests.AuthenticationTests -->
      <class name="com.bank.api.tests.UserProfileManagementTests">
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:43 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=UserProfileManagementTests.verifyGetUserProfile()[pri:1, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="verifyGetUserProfile()[pri:1, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:43 IST" name="verifyGetUserProfile" finished-at="2025-02-07T14:25:43 IST" duration-ms="553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetUserProfile -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:43 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetUserProfile status=SUCCESS method=UserProfileManagementTests.verifyGetUserProfile()[pri:1, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:43 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:43 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=UserProfileManagementTests.verifyUpdateUserProfileWithPutRequest()[pri:2, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="verifyUpdateUserProfileWithPutRequest()[pri:2, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:43 IST" name="verifyUpdateUserProfileWithPutRequest" finished-at="2025-02-07T14:25:44 IST" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateUserProfileWithPutRequest -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:44 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUpdateUserProfileWithPutRequest status=SUCCESS method=UserProfileManagementTests.verifyUpdateUserProfileWithPutRequest()[pri:2, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:44 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=UserProfileManagementTests.verifyUpdateUserProfileWithPatchRequest()[pri:3, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="verifyUpdateUserProfileWithPatchRequest()[pri:3, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:44 IST" name="verifyUpdateUserProfileWithPatchRequest" finished-at="2025-02-07T14:25:44 IST" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUpdateUserProfileWithPatchRequest -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:44 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUpdateUserProfileWithPatchRequest status=SUCCESS method=UserProfileManagementTests.verifyUpdateUserProfileWithPatchRequest()[pri:3, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:44 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=UserProfileManagementTests.verifyChangePassword()[pri:4, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="verifyChangePassword()[pri:4, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:44 IST" name="verifyChangePassword" finished-at="2025-02-07T14:25:45 IST" duration-ms="859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChangePassword -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:45 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:45 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyChangePassword status=SUCCESS method=UserProfileManagementTests.verifyChangePassword()[pri:4, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
        <test-method signature="verifyDeleteUserProfile()[pri:5, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:45 IST" name="verifyDeleteUserProfile" finished-at="2025-02-07T14:25:46 IST" duration-ms="537" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [User profile deleted successfully] but found [{
    "timestamp": "2025-02-07 08:55:45",
    "status": 500,
    "error": "System Error",
    "message": "An unexpected error occurred",
    "path": "uri=/api/users/profile",
    "solution": "Please try again later or contact support",
    "errorCode": "SYS_001"
}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [User profile deleted successfully] but found [{
    "timestamp": "2025-02-07 08:55:45",
    "status": 500,
    "error": "System Error",
    "message": "An unexpected error occurred",
    "path": "uri=/api/users/profile",
    "solution": "Please try again later or contact support",
    "errorCode": "SYS_001"
}]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.bank.api.tests.UserProfileManagementTests.verifyDeleteUserProfile(UserProfileManagementTests.java:143)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeleteUserProfile -->
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:45 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=UserProfileManagementTests.verifyDeleteUserProfile()[pri:5, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5]" started-at="2025-02-07T14:25:46 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeleteUserProfile status=FAILURE method=UserProfileManagementTests.verifyDeleteUserProfile()[pri:5, instance:com.bank.api.tests.UserProfileManagementTests@3569edd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
      </class> <!-- com.bank.api.tests.UserProfileManagementTests -->
      <class name="com.bank.api.tests.AccountTests">
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AccountTests@c827db]" started-at="2025-02-07T14:25:46 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=AccountTests.verifyCreateUserAccount()[pri:1, instance:com.bank.api.tests.AccountTests@c827db] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="verifyCreateUserAccount()[pri:1, instance:com.bank.api.tests.AccountTests@c827db]" started-at="2025-02-07T14:25:46 IST" name="verifyCreateUserAccount" finished-at="2025-02-07T14:25:46 IST" duration-ms="553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateUserAccount -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AccountTests@c827db]" started-at="2025-02-07T14:25:46 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateUserAccount status=SUCCESS method=AccountTests.verifyCreateUserAccount()[pri:1, instance:com.bank.api.tests.AccountTests@c827db] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AccountTests@c827db]" started-at="2025-02-07T14:25:46 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=AccountTests.verifyGetUserAccountByAccountNumber()[pri:2, instance:com.bank.api.tests.AccountTests@c827db] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="verifyGetUserAccountByAccountNumber()[pri:2, instance:com.bank.api.tests.AccountTests@c827db]" started-at="2025-02-07T14:25:46 IST" name="verifyGetUserAccountByAccountNumber" finished-at="2025-02-07T14:25:47 IST" depends-on-methods="com.bank.api.tests.AccountTests.verifyCreateUserAccount" duration-ms="491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetUserAccountByAccountNumber -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AccountTests@c827db]" started-at="2025-02-07T14:25:47 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetUserAccountByAccountNumber status=SUCCESS method=AccountTests.verifyGetUserAccountByAccountNumber()[pri:2, instance:com.bank.api.tests.AccountTests@c827db] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
        <test-method is-config="true" signature="createExtentReportForEachTestMethod(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AccountTests@c827db]" started-at="2025-02-07T14:25:47 IST" name="createExtentReportForEachTestMethod" finished-at="2025-02-07T14:25:47 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=AccountTests.verifyGetUserAccounts()[pri:3, instance:com.bank.api.tests.AccountTests@c827db] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentReportForEachTestMethod -->
        <test-method signature="verifyGetUserAccounts()[pri:3, instance:com.bank.api.tests.AccountTests@c827db]" started-at="2025-02-07T14:25:47 IST" name="verifyGetUserAccounts" finished-at="2025-02-07T14:25:47 IST" depends-on-methods="com.bank.api.tests.AccountTests.verifyCreateUserAccount" duration-ms="444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetUserAccounts -->
        <test-method is-config="true" signature="testMethodExecutionResult(org.testng.ITestResult)[pri:0, instance:com.bank.api.tests.AccountTests@c827db]" started-at="2025-02-07T14:25:47 IST" name="testMethodExecutionResult" finished-at="2025-02-07T14:25:47 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetUserAccounts status=SUCCESS method=AccountTests.verifyGetUserAccounts()[pri:3, instance:com.bank.api.tests.AccountTests@c827db] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodExecutionResult -->
      </class> <!-- com.bank.api.tests.AccountTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
